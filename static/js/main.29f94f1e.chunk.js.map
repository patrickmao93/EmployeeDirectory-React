{"version":3,"sources":["models/Employee.js","components/Header.js","api/RandomAPI.js","components/Overlay.js","components/NavArrow.js","components/Modal.js","components/SearchBar.js","components/Card.js","components/CardMockup.js","components/EmployeeList.js","components/App.js","index.js"],"names":["Employee","data","Object","classCallCheck","this","uuid","login","info","firstName","capitalize","name","first","lastName","last","email","phone","picURL","picture","large","city","location","address","concat","capitalizeEach","street","state","postcode","birthday","formatDate","dob","date","createClass","key","value","dateStr","Date","toLocaleDateString","month","day","year","str","charAt","toUpperCase","slice","_this","split","map","word","join","Header","props","react_default","a","createElement","className","title","children","RandomAPI","axios","create","baseURL","Overlay","display","isActive","displayState","onClick","nextProps","prevState","React","Component","NavArrow","event","stopPropagation","arrowOrientation","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","fill","d","renderArrow","Modal","orientation","selectedIndex","components_NavArrow","length","selectedEmployee","src","alt","SearchBar","term","onInputChange","target","setState","type","placeholder","onChange","Card","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","cardRef","current","addEventListener","onClickCard","employee","employeeInfo","createRef","ref","CardMockup","EmployeeList","renderContent","employees","match","cards","i","push","components_CardMockup","components_Card","App","displayedEmployees","overlay","getEmployeeList","_callee","response","regenerator_default","wrap","_context","prev","next","get","sent","results","stop","filterEmployees","formattedTerm","trim","toLowerCase","employeeList","filter","includes","employeeUuId","find","findIndex","onClickCloseOverlay","onClickArrow","components_Overlay","components_Modal","components_Header","components_SearchBar","components_EmployeeList","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.29f94f1e.chunk.js","sourcesContent":["/**\r\n * Class representing an employee\r\n */\r\nexport class Employee {\r\n  /**\r\n   * Creates an employee\r\n   * @param {object} data - data from response of ajax call to the RandomAPI\r\n   */\r\n  constructor(data) {\r\n    this.uuid = data.login.uuid;\r\n    this.info = {\r\n      firstName: this.capitalize(data.name.first),\r\n      lastName: this.capitalize(data.name.last),\r\n      email: data.email,\r\n      phone: data.phone,\r\n      picURL: data.picture.large,\r\n      city: this.capitalize(data.location.city),\r\n      address: `${this.capitalizeEach(data.location.street)}, ${this.capitalize(\r\n        data.location.state\r\n      )} ${data.location.postcode}`,\r\n      birthday: this.formatDate(data.dob.date)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Formats standard date string to MM/DD/YY format\r\n   * @param {date} dateStr - date string in standard format\r\n   */\r\n  formatDate(dateStr) {\r\n    const d = new Date(dateStr);\r\n    const config = {\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      year: \"2-digit\"\r\n    };\r\n    return d.toLocaleDateString(\"en-US\", config);\r\n  }\r\n\r\n  /**\r\n   * Capitalizes the first letter of a given string\r\n   * @param {string} str\r\n   */\r\n  capitalize(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  /**\r\n   * Capitalizes the first letters in every word that is separated by space\r\n   * @param {string} str\r\n   */\r\n  capitalizeEach(str) {\r\n    return str\r\n      .split(\" \")\r\n      .map(word => this.capitalize(word))\r\n      .join(\" \");\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"header__title\">{props.title}</h1>\r\n      <div className=\"header__content\">{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n// RandomAPI\r\nconst RandomAPI = axios.create({\r\n  baseURL: \"https://randomuser.me/api/\"\r\n});\r\n\r\nexport default RandomAPI;\r\n","import React from \"react\";\r\n/**\r\n * Overlay Component\r\n */\r\nclass Overlay extends React.Component {\r\n  //State initialization\r\n  state = { display: \"hidden\" };\r\n  /**\r\n   * @param {string} displayState - the display state of the overlay, default is \"hidden\"\r\n   */\r\n  isActive = displayState => {\r\n    return displayState === \"show\" ? \"overlay--active\" : \"\";\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.display !== prevState.display) {\r\n      return { display: nextProps.display };\r\n    }\r\n    return { display: prevState.display };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`overlay ${this.isActive(this.state.display)}`}\r\n        onClick={this.props.onClick}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overlay;\r\n","import React from \"react\";\r\n\r\n/**\r\n * NavArrow Component\r\n */\r\nclass NavArrow extends React.Component {\r\n  renderArrow() {\r\n    if (this.props.arrowOrientation === \"left\") {\r\n      return (\r\n        <svg\r\n          aria-hidden=\"true\"\r\n          data-prefix=\"fas\"\r\n          data-icon=\"angle-left\"\r\n          className=\"svg-inline--fa fa-angle-left fa-w-8\"\r\n          role=\"img\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 256 512\"\r\n        >\r\n          <path\r\n            fill=\"#404A51\"\r\n            className=\"left-arrow__path\"\r\n            d=\"M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z\"\r\n          />\r\n        </svg>\r\n      );\r\n    } else {\r\n      return (\r\n        <svg\r\n          aria-hidden=\"true\"\r\n          data-prefix=\"fas\"\r\n          data-icon=\"angle-right\"\r\n          className=\"svg-inline--fa fa-angle-right fa-w-8\"\r\n          role=\"img\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 256 512\"\r\n        >\r\n          <path\r\n            fill=\"#404A51\"\r\n            className=\"left-arrow__path\"\r\n            d=\"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z\"\r\n          />\r\n        </svg>\r\n      );\r\n    }\r\n  }\r\n\r\n  onClick = event => {\r\n    event.stopPropagation(); //prevents clicking on arrow from closing overlay\r\n    this.props.onClick(this.props.arrowOrientation);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav\r\n        className={`${this.props.arrowOrientation}-arrow`}\r\n        onClick={this.onClick}\r\n      >\r\n        {this.renderArrow(this.props.arrowOrientation)}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavArrow;\r\n","import React from \"react\";\r\nimport NavArrow from \"./NavArrow\";\r\n\r\nclass Modal extends React.Component {\r\n  //when user clicks inside modal, stop overlay from closing\r\n  onClick(event) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Renders arrow base on input orientation and whether the current selected index is 0 or last\r\n   * @param {string} orientation - orientation of arrow, \"left\" or \"right\"\r\n   */\r\n  renderArrow(orientation) {\r\n    if (orientation === \"left\" && this.props.selectedIndex > 0) {\r\n      // don't show left arrow if it's the first item in list\r\n      return <NavArrow arrowOrientation=\"left\" onClick={this.props.onClick} />;\r\n    } else if (\r\n      orientation === \"right\" &&\r\n      this.props.selectedIndex < this.props.length - 1\r\n    ) {\r\n      // don't show right arrow if it's the last item in list\r\n      return <NavArrow arrowOrientation=\"right\" onClick={this.props.onClick} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.selectedEmployee === null) {\r\n      //if no employee selected, return null\r\n      return null;\r\n    }\r\n    const selectedEmployee = this.props.selectedEmployee.info;\r\n    return (\r\n      <div className=\"modal-wrapper\">\r\n        <div className=\"modal\" onClick={this.onClick}>\r\n          <div className=\"modal__thumbnail\">\r\n            <img\r\n              src={selectedEmployee.picURL}\r\n              alt={selectedEmployee.firstName}\r\n            />\r\n          </div>\r\n          <div className=\"modal__info\">\r\n            <h2 className=\"modal__info__name\">\r\n              {selectedEmployee.firstName + \" \" + selectedEmployee.lastName}\r\n            </h2>\r\n            <span className=\"modal__info__desc\">{selectedEmployee.email}</span>\r\n            <span className=\"modal__info__desc\">{selectedEmployee.city}</span>\r\n            <div className=\"modal__info__divider\" />\r\n            <span className=\"modal__info__desc\">{selectedEmployee.phone}</span>\r\n            <span className=\"modal__info__desc\">\r\n              {selectedEmployee.address}\r\n            </span>\r\n            <span className=\"modal__info__desc\">\r\n              Birthday: {selectedEmployee.birthday}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {this.renderArrow(\"left\")}\r\n        {this.renderArrow(\"right\")}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  //state initialization\r\n  state = { term: \"\" };\r\n\r\n  /**\r\n   * Makes user input controlled\r\n   * @param {event object} event\r\n   */\r\n  onInputChange = event => {\r\n    const term = event.target.value;\r\n    this.setState({ term });\r\n    this.props.onInputChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"search-bar\"\r\n        type=\"text\"\r\n        name=\"search\"\r\n        value={this.state.term}\r\n        placeholder=\"Start typing to search..\"\r\n        onChange={this.onInputChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Card Component\r\n */\r\nclass Card extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.employeeInfo = props.employee.info;\r\n    this.cardRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.cardRef.current.addEventListener(\"click\", event => {\r\n      this.props.onClickCard(this.props.employee.uuid);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.cardRef} className=\"card\">\r\n        <div className=\"card__thumbnail\">\r\n          <img\r\n            className=\"card__thumbnail__image\"\r\n            src={this.employeeInfo.picURL}\r\n            alt={this.employeeInfo.firstName}\r\n          />\r\n        </div>\r\n        <div className=\"card__info\">\r\n          <h2 className=\"card__info__name\">\r\n            {this.employeeInfo.firstName + \" \" + this.employeeInfo.lastName}\r\n          </h2>\r\n          <span className=\"card__info__desc\">{this.employeeInfo.email}</span>\r\n          <span className=\"card__info__desc\">{this.employeeInfo.city}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst CardMockup = () => {\r\n  return (\r\n    <div className=\"card-mockup\">\r\n      <div className=\"card-mockup__thumbnail\" />\r\n      <div className=\"card-mockup__info\">\r\n        <div className=\"card-mockup__info__name\" />\r\n        <div className=\"card-mockup__info__desc\" />\r\n        <div className=\"card-mockup__info__desc\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMockup;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport CardMockup from \"./CardMockup\";\r\n\r\n/**\r\n * EmployeeList Component\r\n */\r\nclass EmployeeList extends React.Component {\r\n  renderContent = employees => {\r\n    //if search has no match, show \"no match found\"\r\n    if (this.props.match === 0) {\r\n      return (\r\n        <div className=\"employee-list__no-match\">\r\n          <h2>No Match Found</h2>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (employees.length === 0) {\r\n      //show loading screen if employee list is not yet fetched\r\n      const cards = [];\r\n      for (let i = 0; i < 9; i++) {\r\n        cards.push(<CardMockup key={`cardMockup${i}`} />);\r\n      }\r\n      return cards;\r\n    } else {\r\n      //render employee list\r\n      const employeeList = employees.map(employee => {\r\n        return (\r\n          <Card\r\n            key={employee.uuid}\r\n            employee={employee}\r\n            onClickCard={this.props.onClickCard}\r\n          />\r\n        );\r\n      });\r\n      return employeeList;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"employee-list\">\r\n        {this.renderContent(this.props.employees)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeList;\r\n","import React from \"react\";\r\nimport { Employee } from \"../models/Employee\";\r\nimport Header from \"./Header\";\r\nimport RandomAPI from \"../api/RandomAPI\";\r\nimport Overlay from \"./Overlay\";\r\nimport Modal from \"./Modal\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport EmployeeList from \"./EmployeeList\";\r\n\r\n/**\r\n * App component\r\n */\r\nclass App extends React.Component {\r\n  //State initialization\r\n  state = {\r\n    employees: [],\r\n    displayedEmployees: [],\r\n    match: null,\r\n    overlay: \"hidden\",\r\n    selectedEmployee: null,\r\n    selectedIndex: null\r\n  };\r\n\r\n  /**\r\n   * Gets a list of employees from RandomAPI, then store the list in state\r\n   */\r\n  getEmployeeList = async () => {\r\n    const response = await RandomAPI.get(\"?results=100&nat=us\");\r\n    const employees = response.data.results.map(\r\n      employee => new Employee(employee)\r\n    );\r\n    this.setState({ employees: employees, displayedEmployees: employees });\r\n  };\r\n\r\n  /**\r\n   * callback to be called when user type in the search bar\r\n   * Filters the employee list against user input, then set displayedEmployees to\r\n   * the list of matching results\r\n   * @param {string} term - the term user entered in seach field\r\n   */\r\n  filterEmployees = term => {\r\n    //remove spaces from search term\r\n    const formattedTerm = term\r\n      .trim()\r\n      .split(\" \")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    const employeeList = this.state.employees.filter(employee => {\r\n      const name =\r\n        employee.info.firstName.toLowerCase() +\r\n        employee.info.lastName.toLowerCase();\r\n      return name.includes(formattedTerm);\r\n    });\r\n\r\n    this.setState({\r\n      displayedEmployees: employeeList,\r\n      match: employeeList.length\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Callback to be called when employee card is clicked\r\n   * @param {string} employeeUuId - a unique id that identifies employee, comes from RandomAPI\r\n   */\r\n  onClickCard = employeeUuId => {\r\n    //find the employee with given uuid in displayed employees list\r\n    const selectedEmployee = this.state.displayedEmployees.find(\r\n      employee => employee.uuid === employeeUuId\r\n    );\r\n    this.setState({ overlay: \"show\", selectedEmployee }, () => {\r\n      //show overlay\r\n      //find the employee index in displayedEmployees with given uuid\r\n      let selectedIndex = this.state.displayedEmployees.findIndex(\r\n        employee => employee.uuid === this.state.selectedEmployee.uuid\r\n      );\r\n      this.setState({ selectedIndex });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Callback to be called when overlay is clicked\r\n   * Hides overlay\r\n   */\r\n  onClickCloseOverlay = event => {\r\n    this.setState({ overlay: \"hidden\" });\r\n  };\r\n\r\n  /**\r\n   * Callback to be called when left/right arrow button is clicked\r\n   * Navigates to previous/next employee in the modal\r\n   */\r\n  onClickArrow = orientation => {\r\n    let selectedIndex = this.state.selectedIndex; //get current selected employee index\r\n    if (orientation === \"left\") {\r\n      //if left arrow is clicked\r\n      --selectedIndex;\r\n    } else {\r\n      //if right arrow is clicked\r\n      ++selectedIndex;\r\n    }\r\n    this.setState({\r\n      //updates selected employee and it's index\r\n      selectedEmployee: this.state.displayedEmployees[selectedIndex],\r\n      selectedIndex\r\n    });\r\n  };\r\n\r\n  /**\r\n   * After component mounts, make an async api call to RandomAPI\r\n   */\r\n  componentDidMount = () => {\r\n    this.getEmployeeList();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Overlay\r\n          display={this.state.overlay}\r\n          onClick={this.onClickCloseOverlay}\r\n        >\r\n          <Modal\r\n            selectedEmployee={this.state.selectedEmployee}\r\n            selectedIndex={this.state.selectedIndex}\r\n            length={this.state.displayedEmployees.length}\r\n            onClick={this.onClickArrow}\r\n          />\r\n        </Overlay>\r\n        <Header title=\"AWESOME STARTUP EMPLOYEE DIRECTORY\" />\r\n\r\n        <SearchBar onInputChange={this.filterEmployees} />\r\n        <EmployeeList\r\n          employees={this.state.displayedEmployees}\r\n          match={this.state.match}\r\n          onClickCard={this.onClickCard}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./css/index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}